// Function to generate a numerical sequence
fn str generateSequence(start: int, end: int, step: int) {
    // Calculate the number of elements in the sequence
    var count: int = (end - start) / step;
    if ((end - (count * step + start)) != 0) {
        count = count + 1; // Include the last element if it's within the range
    }

    // Allocate memory for the array
    var sequence: int[] = malloc(count * sizeof(int));

    // Populate the array
    var i: int = 0;
    var current: int = start;
    while (i < count) {
        sequence[i] = current;
        current =current + step;
        i = i + 1;
    }

    // Print the generated sequence
    i = 0;
    while (i < count) {
        print(sequence[i]);
        i = i + 1;
    }
    return "Success";
}

// Test the generateSequence function
fn int main() {

    print(generateSequence(1, 1000, 2));

    return 0;
}
