// Fibonacci Sequence Generator

// Function to generate Fibonacci sequence
fn int[] generateFibonacci(int n) {
    // Create an array to store Fibonacci sequence
    int[] fibSequence = new int[n];
    
    // Handle base cases
    if n <= 0 {
        return fibSequence;
    }
    
    // First two Fibonacci numbers
    fibSequence[0] = 0;
    
    // Ensure we have at least two elements if n > 1
    if n > 1 {
        fibSequence[1] = 1;
    }
    
    // Generate Fibonacci sequence
    int i = 2;
    while i < n {
        fibSequence[i] = fibSequence[i-1] + fibSequence[i-2];
        i = i + 1;
    }
    
    return fibSequence;
}

// Function to print Fibonacci sequence
fn void printFibonacci(int[] sequence, int length) {
    int j = 0;
    while j < length {
        print("Fibonacci(", j, "): ", sequence[j]);
        j = j + 1;
    }
}

// Main function to demonstrate Fibonacci generation
fn int main() {
    // Generate Fibonacci sequence of 10 numbers
    int sequenceLength = 10;
    int[] fibNumbers = generateFibonacci(sequenceLength);
    
    // Print the generated sequence
    printFibonacci(fibNumbers, sequenceLength);
    
    // Additional test: find nth Fibonacci number
    int nthFib = 6;
    if nthFib < sequenceLength {
        print("", nthFib, "th Fibonacci number: ", fibNumbers[nthFib]);
    }
    
    return 0;
}